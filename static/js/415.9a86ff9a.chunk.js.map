{"version":3,"file":"static/js/415.9a86ff9a.chunk.js","mappings":"gRAKe,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAyBjB,OAxBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,wGAEUC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAPV,UAW2BC,EAAAA,EAAAA,GACrB,+DACAL,GAbN,OAWUM,EAXV,OAeUX,EAAUW,EAASC,KAAKZ,QAC9BC,EAAWD,GAhBf,gDAkBIa,QAAQC,IAAR,MAlBJ,0DADc,uBAAC,WAAD,wBAsBdC,EACD,GAAE,KAED,0BACE,eACEC,MAAO,CACLC,QAAS,OACTC,SAAU,qBACVC,oBAAqB,wCACrBC,QAAS,OACTC,UAAW,IACXC,aAAc,IACdC,QAAS,OACTC,UAAW,OACXC,WAAY,OACZC,YAAa,QAXjB,SAcG1B,EAAQ2B,KAAI,SAAAC,GACX,OACE,UAAC,KAAD,CACEC,GAAE,kBAAaD,EAAGE,IAElBC,MAAO,CAAEC,KAAM9B,GAHjB,UAKG,KACD,eACEc,MAAO,CACLiB,MAAO,SAFX,UAKE,4BACE,gBACEC,IAAG,0CAAqCN,EAAGO,aAC3CC,IAAI,MAEN,yBAAG,IAAER,EAAGS,mBACR,yBAfCC,EAAAA,EAAAA,MAoBV,OAIR,C","sources":["pages/Home.jsx"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useLocation } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nexport default function Home() {\n  const [results, setResults] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    async function get() {\n      try {\n        const options = {\n          method: 'GET',\n          headers: {\n            accept: 'application/json',\n            Authorization:\n              'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZTFlM2NhNWEwMzhjYjE5YWE0NDQ4MTcyMjJjNDViMyIsInN1YiI6IjY0Nzc3ZDQ5MTc0OTczMDEzNWZmOWMxMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wAdw2a-XnOHB5EkPOkcAHNROr6KXTn-LqbFP8KDzpdE',\n          },\n        };\n\n        const response = await axios(\n          'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n          options\n        );\n        const results = response.data.results;\n        setResults(results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    get();\n  }, []);\n  return (\n    <div>\n      <ul\n        style={{\n          display: 'grid',\n          maxWidth: 'calc(100vw - 44px)',\n          gridTemplateColumns: 'repeat(auto-fill, minmax(500px, 1fr))',\n          gridGap: '44px',\n          marginTop: '0',\n          marginBottom: '0',\n          padding: '32px',\n          listStyle: 'none',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n        }}\n      >\n        {results.map(el => {\n          return (\n            <Link\n              to={`/movies/${el.id}`}\n              key={nanoid()}\n              state={{ from: location }}\n            >\n              {' '}\n              <li\n                style={{\n                  width: '500px',\n                }}\n              >\n                <div>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500/${el.poster_path}`}\n                    alt=\"\"\n                  />\n                  <p> {el.original_title}</p>\n                  <p></p>\n                </div>\n              </li>\n            </Link>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n"],"names":["Home","useState","results","setResults","location","useLocation","useEffect","options","method","headers","accept","Authorization","axios","response","data","console","log","get","style","display","maxWidth","gridTemplateColumns","gridGap","marginTop","marginBottom","padding","listStyle","marginLeft","marginRight","map","el","to","id","state","from","width","src","poster_path","alt","original_title","nanoid"],"sourceRoot":""}