{"version":3,"file":"static/js/134.98d68803.chunk.js","mappings":"uQAKe,SAASA,IACtB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACMC,EAAQ,mCAAG,yFACVJ,EADU,iEAKPK,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAVO,UAcUC,EAAAA,EAAAA,GAAM,mDAAD,OACyBV,EADzB,8CAE1BK,GAhBW,OAcPM,EAdO,OAkBbR,EAAgBQ,EAASC,KAAKC,SAlBjB,kDAoBbC,QAAQC,IAAR,MApBa,0DAAH,qDAgCd,OACE,iCACE,kBAAMX,SAPW,SAAAY,GACnBA,EAAEC,iBACFb,GACD,EAIG,WACE,mBAAQc,KAAK,SAAb,UACE,0BAAM,cAGR,kBACEA,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,oBACZC,SArBa,SAAAN,GACnBf,EAAce,EAAEO,OAAOC,MACxB,QAsBG,eACEC,MAAO,CACLC,QAAS,OACTC,SAAU,qBACVC,oBAAqB,wCACrBC,QAAS,OACTC,UAAW,IACXC,aAAc,IACdC,QAAS,OACTC,UAAW,OACXC,WAAY,OACZC,YAAa,QAXjB,SAcGjC,EAAakC,KAAI,SAAAC,GAChB,OACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAGE,IAAhB,UACE,eAEEd,MAAO,CACLe,MAAO,SAHX,UAME,4BACE,gBACEC,IAAG,0CAAqCJ,EAAGK,aAC3CC,IAAI,MAEN,yBAAG,IAAEN,EAAGO,mBACR,qBAXGP,EAAGE,MAFeM,EAAAA,EAAAA,MAkB9B,QAIR,C","sources":["pages/Movies.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { nanoid } from 'nanoid';\n\nexport default function Movies() {\n  const [inputValue, setInputValue] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const onSubmit = async () => {\n    if (!inputValue) {\n      return;\n    }\n    try {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZTFlM2NhNWEwMzhjYjE5YWE0NDQ4MTcyMjJjNDViMyIsInN1YiI6IjY0Nzc3ZDQ5MTc0OTczMDEzNWZmOWMxMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wAdw2a-XnOHB5EkPOkcAHNROr6KXTn-LqbFP8KDzpdE',\n        },\n      };\n\n      const response = await axios(\n        `https://api.themoviedb.org/3/search/movie?query=${inputValue}&include_adult=false&language=en-US&page=1`,\n        options\n      );\n      setSearchResult(response.data.results);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search for movies\"\n          onChange={handleChange}\n        />\n      </form>\n      <ul\n        style={{\n          display: 'grid',\n          maxWidth: 'calc(100vw - 44px)',\n          gridTemplateColumns: 'repeat(auto-fill, minmax(500px, 1fr))',\n          gridGap: '44px',\n          marginTop: '0',\n          marginBottom: '0',\n          padding: '32px',\n          listStyle: 'none',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n        }}\n      >\n        {searchResult.map(el => {\n          return (\n            <Link to={`${el.id}`} key={nanoid()}>\n              <li\n                key={el.id}\n                style={{\n                  width: '500px',\n                }}\n              >\n                <div>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500/${el.poster_path}`}\n                    alt=\"\"\n                  />\n                  <p> {el.original_title}</p>\n                  <p></p>\n                </div>\n              </li>\n            </Link>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n"],"names":["Movies","useState","inputValue","setInputValue","searchResult","setSearchResult","onSubmit","options","method","headers","accept","Authorization","axios","response","data","results","console","log","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","value","style","display","maxWidth","gridTemplateColumns","gridGap","marginTop","marginBottom","padding","listStyle","marginLeft","marginRight","map","el","to","id","width","src","poster_path","alt","original_title","nanoid"],"sourceRoot":""}