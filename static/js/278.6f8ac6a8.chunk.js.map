{"version":3,"file":"static/js/278.6f8ac6a8.chunk.js","mappings":"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","sources":["TheMovieDbService.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nexport default class ThemovieDB {\n  static async getTrending() {\n    try {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZTFlM2NhNWEwMzhjYjE5YWE0NDQ4MTcyMjJjNDViMyIsInN1YiI6IjY0Nzc3ZDQ5MTc0OTczMDEzNWZmOWMxMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wAdw2a-XnOHB5EkPOkcAHNROr6KXTn-LqbFP8KDzpdE',\n        },\n      };\n\n      const response = await axios(\n        'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n        options\n      );\n      const results = response.data.results;\n      return results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async getMovieByQ(query) {\n    try {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZTFlM2NhNWEwMzhjYjE5YWE0NDQ4MTcyMjJjNDViMyIsInN1YiI6IjY0Nzc3ZDQ5MTc0OTczMDEzNWZmOWMxMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wAdw2a-XnOHB5EkPOkcAHNROr6KXTn-LqbFP8KDzpdE',\n        },\n      };\n\n      const response = await axios(\n        `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n        options\n      );\n      return response.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async getMovieById(id) {\n    try {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZTFlM2NhNWEwMzhjYjE5YWE0NDQ4MTcyMjJjNDViMyIsInN1YiI6IjY0Nzc3ZDQ5MTc0OTczMDEzNWZmOWMxMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wAdw2a-XnOHB5EkPOkcAHNROr6KXTn-LqbFP8KDzpdE',\n        },\n      };\n\n      const response = await axios(\n        `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n        options\n      );\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async getReviewsById(id) {\n    try {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZTFlM2NhNWEwMzhjYjE5YWE0NDQ4MTcyMjJjNDViMyIsInN1YiI6IjY0Nzc3ZDQ5MTc0OTczMDEzNWZmOWMxMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wAdw2a-XnOHB5EkPOkcAHNROr6KXTn-LqbFP8KDzpdE',\n        },\n      };\n\n      const response = await axios(\n        `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n        options\n      );\n      return response.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async getCastById(id) {\n    try {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZTFlM2NhNWEwMzhjYjE5YWE0NDQ4MTcyMjJjNDViMyIsInN1YiI6IjY0Nzc3ZDQ5MTc0OTczMDEzNWZmOWMxMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wAdw2a-XnOHB5EkPOkcAHNROr6KXTn-LqbFP8KDzpdE',\n        },\n      };\n\n      const response = await axios(\n        `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n        options\n      );\n      return response.data.cast;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { nanoid } from 'nanoid';\nimport ThemovieDB from 'TheMovieDbService';\nexport default function Movies() {\n  const [inputValue, setInputValue] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const location = useLocation();\n  useEffect(() => {\n    if (searchResult.length > 0) {\n      return;\n    }\n    const value = searchParams.get('name') ?? '';\n    if (inputValue === value) {\n      return;\n    }\n    async function get() {\n      setSearchResult(await ThemovieDB.getMovieByQ(value));\n      setInputValue(value);\n    }\n    get();\n  }, [inputValue, searchParams, searchResult.length]);\n  const onSubmit = async () => {\n    if (!inputValue) {\n      return;\n    }\n    try {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZTFlM2NhNWEwMzhjYjE5YWE0NDQ4MTcyMjJjNDViMyIsInN1YiI6IjY0Nzc3ZDQ5MTc0OTczMDEzNWZmOWMxMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wAdw2a-XnOHB5EkPOkcAHNROr6KXTn-LqbFP8KDzpdE',\n        },\n      };\n\n      const response = await axios(\n        `https://api.themoviedb.org/3/search/movie?query=${inputValue}&include_adult=false&language=en-US&page=1`,\n        options\n      );\n      setSearchResult(response.data.results);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleChange = e => {\n    setInputValue(e.target.value);\n    setSearchParams({ name: e.target.value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search for movies\"\n          onChange={handleChange}\n        />\n      </form>\n      <ul\n        style={{\n          display: 'grid',\n          maxWidth: 'calc(100vw - 44px)',\n          gridTemplateColumns: 'repeat(auto-fill, minmax(500px, 1fr))',\n          gridGap: '44px',\n          marginTop: '0',\n          marginBottom: '0',\n          padding: '32px',\n          listStyle: 'none',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n        }}\n      >\n        {searchResult.map(el => {\n          return (\n            <Link to={`${el.id}`} key={nanoid()} state={{ from: location }}>\n              <li\n                key={el.id}\n                style={{\n                  width: '500px',\n                }}\n              >\n                <div>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500/${el.poster_path}`}\n                    alt=\"\"\n                  />\n                  <p> {el.original_title}</p>\n                  <p></p>\n                </div>\n              </li>\n            </Link>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n"],"names":["ThemovieDB","options","method","headers","accept","Authorization","axios","response","results","data","console","log","query","id","cast","Movies","useState","inputValue","setInputValue","searchResult","setSearchResult","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","length","value","get","onSubmit","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","name","style","display","maxWidth","gridTemplateColumns","gridGap","marginTop","marginBottom","padding","listStyle","marginLeft","marginRight","map","el","to","state","from","width","src","poster_path","alt","original_title","nanoid"],"sourceRoot":""}